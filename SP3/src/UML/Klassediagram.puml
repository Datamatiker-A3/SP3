@startuml
'https://plantuml.com/class-diagram

abstract class Turnering
class Main
class Hold
class KnockoutTurnering
class PointTurnering
class Kamp
class DBConnector
class Fillæser
class UI

Main o-- UI
UI o-- Turnering
Turnering <|-- KnockoutTurnering
Turnering<|-- PointTurnering
Turnering o-- "16" Hold
Turnering o-- Kamp
Kamp o-- "2" Hold
UI o-- DBConnector
UI o-- Fillæser

class UI{
 - int input
 - boolean quit
 - boolean isFillæser
 - boolean isDataBase
 - Arraylist<Hold> hold
 - Fillæser filLæser
 - DBConnector dbConnector
 + menu ()
}

class Main {
  Ui ui
  ui.menu()
}
class Kamp{
- int kampLængde
- int kampID
- Hold[2] beggeHold
+ findVinder()
+ findVinderPoints()
+ getHold1 ()
+ getHold2 ()
}

class Hold{
- int points
- int målScore
- String holdNavn
- int antalSpillere
- int holdID
- Arraylist <Kamp> kampHistorik
+ getMålscore ()
+ setMålscore ()
+ getPoints ()
+ setPoints()
+ getHoldNavn ()
+ toString()

}
abstract class Turnering{
- Arraylist <Hold> holdListe
+ {abstract}fjernOverskud()
+ {abstract}opsætKamp()
+ {abstract}kampCyklus()
}
class KnockoutTurnering{
- int nuværendeKamp
- int cyklus
- Arraylist <Kamp> kampOpsættelse
- Arraylist <Hold> holdListe
+ kampCyklus ()
+ fjernOverskud ()
+ opsætKamp ()
+ returnerHold ()

}
class PointTurnering{
- int nuværendeKamp
- int cyklus
- Arraylist <Kamp> kampOpsættelse
- Arraylist <Hold> holdListe
- Hold[4] finalisterne
+ kampCyklus ()
+ fjernOverskud ()
+ opsætKamp ()
+ returnerHold ()
+ findFinalister ()
+ sidsteKampe ()
}
class DBConnector{
String DB_URL
String USER
String PASS
Arraylist<Hold> holdListeDatabase
+ readFieldData ()
}
class Fillæser{
Arraylist<Hold> holdListe
+ læsHoldData ()
}


@enduml